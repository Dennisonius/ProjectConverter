cmake_minimum_required(VERSION 3.22)

# Set the project name, [description] and [version],
# while enabling its required languages
project(%project_name% 
	DESCRIPTION "Electricity meter: R32 case, shunt, RS485, dlms protocol support"
	VERSION 1.0.0
	LANGUAGES C ASM)

# Set base path to sources
set(SOURCES_BASE_PATH "%sources_base%")
# To export compile_commands.json
set(CMAKE_EXPORT_COMPILE_COMMANDS ON)
# Add the executable for the "my_test" target,
# specifying its source files
add_executable(my_test
	# Source files
%source_file%
	)

# Add the library for the "my_test" target,
# specifying its source files
target_link_libraries(my_test
	# Library source files
%lib_files%
	)

# Set the properties for the "my_test" target
set_target_properties(my_test PROPERTIES
	DEVICE        %chip%
	CPU           %core%
	FPU           %fpu%
	ARCHITECTURE  ${CMAKE_SYSTEM_PROCESSOR}
	ENDIAN        little
	DEVICE_ICF    "${SOURCES_BASE_PATH}%linker_icf%")


# Применяется лишь для цели "RequestGenerator":
target_include_directories(my_test PUBLIC
	$<$<COMPILE_LANGUAGE:C>:
	$<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}>
%include_dir%
	>)

# Set a preprocessor symbol, usable from "my_test" target (unused symbols: USE_ASM=1)
target_compile_definitions(my_test PUBLIC 
	__packed=
	__no_init=
	__root=
	__weak=
%preprocessor_defines%)

# Set the compiler flags for the "my_test" target
target_compile_options(my_test PRIVATE
	--target=armv7e-m-none-eabi
	-mcpu=cortex-m4
	-mthumb

    # Путь к тулчейну
	--sysroot=/home/deo/toolchain/arm-gnu-toolchain-12.3.rel1-x86_64-arm-none-eabi/arm-none-eabi
    )

